{"version":3,"sources":["webpack:///webpack/bootstrap 7c60eec8d3f475778714","webpack:///./graph.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;;AAED;AACA;AACA,kDAAiD;AACjD;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 7c60eec8d3f475778714\n **/","// Generated by CoffeeScript 1.10.0\nvar a, error_graph, init_graph;\n\nSettings.id = {\n  messages: \"#messages\",\n  coords: \"#coords\",\n  graph_container: \"#paper_holder\",\n  paper: \"#myholder\",\n  svg: \"#v-2\"\n};\n\na = 1;\n\n$(document).ready(function() {\n  var global_gui, session, uivent;\n  uivent = new metabook.ui.Vent();\n  uivent.register({\n    'ui': metabook.ui\n  });\n  global_gui = new metabook.ui.GlobalGUI();\n  session = new metabook.connect.Session(metabook.uri.sessions_endpoint);\n  session.connect_metabook(metabook.uri.file.path);\n  return metabook.data.get_xhr(metabook.uri.file.endpoint + metabook.uri.file.path).done(function(file_json) {\n    return init_graph(file_json);\n  }).fail(error_graph);\n});\n\ninit_graph = function(json_graph) {\n  var menuview, notebook, paper;\n  notebook = new metabook.models.MetabookModel({}, {\n    json_graph: json_graph\n  });\n  paper = init_jointjs(notebook);\n  notebook.session = new metabook.connect.Session(metabook.uri.sessions_endpoint, notebook.id);\n  $(\"#id2\").dimmer('hide');\n  $(\"#bottom_sidebar\").sidebar({\n    context: $('#id2')\n  });\n  $(\"#bottom_sidebar\").sidebar('setting', 'transition', 'overlay');\n  $(\"#bottom_sidebar\").sidebar('setting', 'dimPage', false);\n  $(\"#bottom_sidebar\").sidebar('attach events', '#uiMenuToggle');\n  $(\"#bottom_sidebar\").sidebar('setting', 'closable', false);\n  uivent.register({\n    'session': notebook.session,\n    'model': notebook,\n    'graph': paper.model\n  });\n  jointjs_attach_events(paper, paper.model);\n  return menuview = new metabook.views.MenuView({\n    el: $(\"#metabook_top_menu\"),\n    model: notebook\n  });\n};\n\nerror_graph = function(e) {\n  $(\"#id2\").dimmer('hide');\n  return alert(\"Connection error. Check if your backend is running.\");\n};\n\n//# sourceMappingURL=graph.js.map\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./graph.js\n ** module id = 0\n ** module chunks = 0\n **/"],"sourceRoot":""}