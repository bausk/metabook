// Generated by CoffeeScript 1.10.0
$(document).ready(function() {
  var WebSocketTest, counter, datastore, makeCounter, messageContainer;
  WebSocketTest = void 0;
  messageContainer = $("#messages");
  datastore = Backbone.Model.extend({
    websocket: null
  });
  WebSocketTest = function(ev) {
    var ws;
    messageContainer.text("WebSocket is supported by your Browser!");
    ws = new WebSocket("ws://" + window.location.host + "/api/session/guise?Id=123456789");
    ws.onopen = function() {
      $('#bSend').on("click", function() {
        return ws.send("New message");
      });
      $('#bClose').on("click", function(ev) {
        ws.close();
        $(messageContainer).text("Connection is forcefully closed");
        $(ev.target).addClass("disabled");
        $('#bSend').addClass("disabled");
        return $('#bConnect').removeClass("disabled");
      });
      $('#bClose').removeClass("disabled");
      $('#bSend').removeClass("disabled");
      return $(ev.target).addClass("disabled");
    };
    ws.onmessage = function(evt) {
      var received_msg;
      received_msg = evt.data;
      return $(messageContainer).text("Message is received..." + received_msg);
    };
    return ws.onclose = function() {};
  };
  $('#bConnect').on("click", WebSocketTest);
  makeCounter = function() {
    var count;
    count = 0;
    return {
      increment: function() {
        return count++;
      },
      getCount: function() {
        return count;
      }
    };
  };
  counter = makeCounter();
  return $('#bTest1').on("click", function() {
    counter.increment();
    return alert(counter.getCount());
  });
});

//# sourceMappingURL=graph.js.map
